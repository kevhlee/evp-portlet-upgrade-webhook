/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.evp.model.impl;

import com.liferay.evp.model.EVPServiceRequest;
import com.liferay.evp.model.EVPServiceRequestModel;
import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.PortalException;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.User;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.service.UserLocalServiceUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.workflow.WorkflowConstants;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.sql.Types;

import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.Map;
import java.util.Objects;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the EVPServiceRequest service. Represents a row in the &quot;EVPServiceRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>EVPServiceRequestModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EVPServiceRequestImpl}.
 * </p>
 *
 * @author Val Nagy
 * @see EVPServiceRequestImpl
 * @generated
 */
public class EVPServiceRequestModelImpl
	extends BaseModelImpl<EVPServiceRequest> implements EVPServiceRequestModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a evp service request model instance should use the <code>EVPServiceRequest</code> interface instead.
	 */
	public static final String TABLE_NAME = "EVPServiceRequest";

	public static final Object[][] TABLE_COLUMNS = {
		{"evpServiceRequestId", Types.BIGINT}, {"companyId", Types.BIGINT},
		{"userId", Types.BIGINT}, {"userName", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"contactEmailAddressId", Types.BIGINT},
		{"contactPhoneId", Types.BIGINT}, {"contactUserId", Types.BIGINT},
		{"evpRequestOrganizationId", Types.BIGINT},
		{"managerUserId", Types.BIGINT},
		{"parentEVPServiceRequestId", Types.BIGINT},
		{"requestOrganizationAddressId", Types.BIGINT},
		{"requestOrganizationWebsiteId", Types.BIGINT},
		{"subsidiaryGroupId", Types.BIGINT}, {"description", Types.VARCHAR},
		{"employmentType", Types.INTEGER},
		{"employmentHoursPerWeek", Types.INTEGER}, {"purpose", Types.VARCHAR},
		{"purposeOther", Types.VARCHAR}, {"behalfOf", Types.VARCHAR},
		{"behalfOfOther", Types.VARCHAR},
		{"requestedStartDate", Types.TIMESTAMP},
		{"requestedEndDate", Types.TIMESTAMP},
		{"requestedTotalHours", Types.INTEGER}, {"promoteTrip", Types.BOOLEAN},
		{"confirmedStartDate", Types.TIMESTAMP},
		{"confirmedEndDate", Types.TIMESTAMP},
		{"confirmedTotalHours", Types.INTEGER},
		{"contactBenefit", Types.VARCHAR}, {"contactComments", Types.VARCHAR},
		{"hash", Types.VARCHAR}, {"feedbackDescription", Types.VARCHAR},
		{"employeeBenefit", Types.VARCHAR}, {"recipientBenefit", Types.VARCHAR},
		{"shareStory", Types.BOOLEAN}, {"status", Types.INTEGER},
		{"statusByUserId", Types.BIGINT}, {"statusByUserName", Types.VARCHAR},
		{"statusDate", Types.TIMESTAMP}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("evpServiceRequestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("userName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("contactEmailAddressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("contactPhoneId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("contactUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("evpRequestOrganizationId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("managerUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("parentEVPServiceRequestId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("requestOrganizationAddressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("requestOrganizationWebsiteId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("subsidiaryGroupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("description", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employmentType", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("employmentHoursPerWeek", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("purpose", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("purposeOther", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("behalfOf", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("behalfOfOther", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("requestedStartDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("requestedEndDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("requestedTotalHours", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("promoteTrip", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("confirmedStartDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("confirmedEndDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("confirmedTotalHours", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("contactBenefit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("contactComments", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("hash", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("feedbackDescription", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("employeeBenefit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("recipientBenefit", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("shareStory", Types.BOOLEAN);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("statusByUserId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("statusByUserName", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("statusDate", Types.TIMESTAMP);
	}

	public static final String TABLE_SQL_CREATE =
		"create table EVPServiceRequest (evpServiceRequestId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,contactEmailAddressId LONG,contactPhoneId LONG,contactUserId LONG,evpRequestOrganizationId LONG,managerUserId LONG,parentEVPServiceRequestId LONG,requestOrganizationAddressId LONG,requestOrganizationWebsiteId LONG,subsidiaryGroupId LONG,description VARCHAR(75) null,employmentType INTEGER,employmentHoursPerWeek INTEGER,purpose VARCHAR(75) null,purposeOther VARCHAR(75) null,behalfOf VARCHAR(75) null,behalfOfOther VARCHAR(75) null,requestedStartDate DATE null,requestedEndDate DATE null,requestedTotalHours INTEGER,promoteTrip BOOLEAN,confirmedStartDate DATE null,confirmedEndDate DATE null,confirmedTotalHours INTEGER,contactBenefit VARCHAR(75) null,contactComments VARCHAR(75) null,hash VARCHAR(75) null,feedbackDescription VARCHAR(75) null,employeeBenefit VARCHAR(75) null,recipientBenefit VARCHAR(75) null,shareStory BOOLEAN,status INTEGER,statusByUserId LONG,statusByUserName VARCHAR(75) null,statusDate DATE null)";

	public static final String TABLE_SQL_DROP = "drop table EVPServiceRequest";

	public static final String ORDER_BY_JPQL =
		" ORDER BY evpServiceRequest.evpServiceRequestId ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY EVPServiceRequest.evpServiceRequestId ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long COMPANYID_COLUMN_BITMASK = 1L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link #getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long STATUS_COLUMN_BITMASK = 2L;

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *		#getColumnBitmask(String)}
	 */
	@Deprecated
	public static final long EVPSERVICEREQUESTID_COLUMN_BITMASK = 4L;

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
	}

	public EVPServiceRequestModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _evpServiceRequestId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEvpServiceRequestId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _evpServiceRequestId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EVPServiceRequest.class;
	}

	@Override
	public String getModelClassName() {
		return EVPServiceRequest.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<EVPServiceRequest, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		for (Map.Entry<String, Function<EVPServiceRequest, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EVPServiceRequest, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((EVPServiceRequest)this));
		}

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<EVPServiceRequest, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<EVPServiceRequest, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(EVPServiceRequest)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<EVPServiceRequest, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<EVPServiceRequest, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, EVPServiceRequest>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			EVPServiceRequest.class.getClassLoader(), EVPServiceRequest.class,
			ModelWrapper.class);

		try {
			Constructor<EVPServiceRequest> constructor =
				(Constructor<EVPServiceRequest>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<EVPServiceRequest, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<EVPServiceRequest, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<EVPServiceRequest, Object>>
			attributeGetterFunctions =
				new LinkedHashMap
					<String, Function<EVPServiceRequest, Object>>();
		Map<String, BiConsumer<EVPServiceRequest, ?>>
			attributeSetterBiConsumers =
				new LinkedHashMap<String, BiConsumer<EVPServiceRequest, ?>>();

		attributeGetterFunctions.put(
			"evpServiceRequestId", EVPServiceRequest::getEvpServiceRequestId);
		attributeSetterBiConsumers.put(
			"evpServiceRequestId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setEvpServiceRequestId);
		attributeGetterFunctions.put(
			"companyId", EVPServiceRequest::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setCompanyId);
		attributeGetterFunctions.put("userId", EVPServiceRequest::getUserId);
		attributeSetterBiConsumers.put(
			"userId",
			(BiConsumer<EVPServiceRequest, Long>)EVPServiceRequest::setUserId);
		attributeGetterFunctions.put(
			"userName", EVPServiceRequest::getUserName);
		attributeSetterBiConsumers.put(
			"userName",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setUserName);
		attributeGetterFunctions.put(
			"createDate", EVPServiceRequest::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", EVPServiceRequest::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setModifiedDate);
		attributeGetterFunctions.put(
			"contactEmailAddressId",
			EVPServiceRequest::getContactEmailAddressId);
		attributeSetterBiConsumers.put(
			"contactEmailAddressId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setContactEmailAddressId);
		attributeGetterFunctions.put(
			"contactPhoneId", EVPServiceRequest::getContactPhoneId);
		attributeSetterBiConsumers.put(
			"contactPhoneId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setContactPhoneId);
		attributeGetterFunctions.put(
			"contactUserId", EVPServiceRequest::getContactUserId);
		attributeSetterBiConsumers.put(
			"contactUserId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setContactUserId);
		attributeGetterFunctions.put(
			"evpRequestOrganizationId",
			EVPServiceRequest::getEvpRequestOrganizationId);
		attributeSetterBiConsumers.put(
			"evpRequestOrganizationId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setEvpRequestOrganizationId);
		attributeGetterFunctions.put(
			"managerUserId", EVPServiceRequest::getManagerUserId);
		attributeSetterBiConsumers.put(
			"managerUserId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setManagerUserId);
		attributeGetterFunctions.put(
			"parentEVPServiceRequestId",
			EVPServiceRequest::getParentEVPServiceRequestId);
		attributeSetterBiConsumers.put(
			"parentEVPServiceRequestId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setParentEVPServiceRequestId);
		attributeGetterFunctions.put(
			"requestOrganizationAddressId",
			EVPServiceRequest::getRequestOrganizationAddressId);
		attributeSetterBiConsumers.put(
			"requestOrganizationAddressId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setRequestOrganizationAddressId);
		attributeGetterFunctions.put(
			"requestOrganizationWebsiteId",
			EVPServiceRequest::getRequestOrganizationWebsiteId);
		attributeSetterBiConsumers.put(
			"requestOrganizationWebsiteId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setRequestOrganizationWebsiteId);
		attributeGetterFunctions.put(
			"subsidiaryGroupId", EVPServiceRequest::getSubsidiaryGroupId);
		attributeSetterBiConsumers.put(
			"subsidiaryGroupId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setSubsidiaryGroupId);
		attributeGetterFunctions.put(
			"description", EVPServiceRequest::getDescription);
		attributeSetterBiConsumers.put(
			"description",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setDescription);
		attributeGetterFunctions.put(
			"employmentType", EVPServiceRequest::getEmploymentType);
		attributeSetterBiConsumers.put(
			"employmentType",
			(BiConsumer<EVPServiceRequest, Integer>)
				EVPServiceRequest::setEmploymentType);
		attributeGetterFunctions.put(
			"employmentHoursPerWeek",
			EVPServiceRequest::getEmploymentHoursPerWeek);
		attributeSetterBiConsumers.put(
			"employmentHoursPerWeek",
			(BiConsumer<EVPServiceRequest, Integer>)
				EVPServiceRequest::setEmploymentHoursPerWeek);
		attributeGetterFunctions.put("purpose", EVPServiceRequest::getPurpose);
		attributeSetterBiConsumers.put(
			"purpose",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setPurpose);
		attributeGetterFunctions.put(
			"purposeOther", EVPServiceRequest::getPurposeOther);
		attributeSetterBiConsumers.put(
			"purposeOther",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setPurposeOther);
		attributeGetterFunctions.put(
			"behalfOf", EVPServiceRequest::getBehalfOf);
		attributeSetterBiConsumers.put(
			"behalfOf",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setBehalfOf);
		attributeGetterFunctions.put(
			"behalfOfOther", EVPServiceRequest::getBehalfOfOther);
		attributeSetterBiConsumers.put(
			"behalfOfOther",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setBehalfOfOther);
		attributeGetterFunctions.put(
			"requestedStartDate", EVPServiceRequest::getRequestedStartDate);
		attributeSetterBiConsumers.put(
			"requestedStartDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setRequestedStartDate);
		attributeGetterFunctions.put(
			"requestedEndDate", EVPServiceRequest::getRequestedEndDate);
		attributeSetterBiConsumers.put(
			"requestedEndDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setRequestedEndDate);
		attributeGetterFunctions.put(
			"requestedTotalHours", EVPServiceRequest::getRequestedTotalHours);
		attributeSetterBiConsumers.put(
			"requestedTotalHours",
			(BiConsumer<EVPServiceRequest, Integer>)
				EVPServiceRequest::setRequestedTotalHours);
		attributeGetterFunctions.put(
			"promoteTrip", EVPServiceRequest::getPromoteTrip);
		attributeSetterBiConsumers.put(
			"promoteTrip",
			(BiConsumer<EVPServiceRequest, Boolean>)
				EVPServiceRequest::setPromoteTrip);
		attributeGetterFunctions.put(
			"confirmedStartDate", EVPServiceRequest::getConfirmedStartDate);
		attributeSetterBiConsumers.put(
			"confirmedStartDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setConfirmedStartDate);
		attributeGetterFunctions.put(
			"confirmedEndDate", EVPServiceRequest::getConfirmedEndDate);
		attributeSetterBiConsumers.put(
			"confirmedEndDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setConfirmedEndDate);
		attributeGetterFunctions.put(
			"confirmedTotalHours", EVPServiceRequest::getConfirmedTotalHours);
		attributeSetterBiConsumers.put(
			"confirmedTotalHours",
			(BiConsumer<EVPServiceRequest, Integer>)
				EVPServiceRequest::setConfirmedTotalHours);
		attributeGetterFunctions.put(
			"contactBenefit", EVPServiceRequest::getContactBenefit);
		attributeSetterBiConsumers.put(
			"contactBenefit",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setContactBenefit);
		attributeGetterFunctions.put(
			"contactComments", EVPServiceRequest::getContactComments);
		attributeSetterBiConsumers.put(
			"contactComments",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setContactComments);
		attributeGetterFunctions.put("hash", EVPServiceRequest::getHash);
		attributeSetterBiConsumers.put(
			"hash",
			(BiConsumer<EVPServiceRequest, String>)EVPServiceRequest::setHash);
		attributeGetterFunctions.put(
			"feedbackDescription", EVPServiceRequest::getFeedbackDescription);
		attributeSetterBiConsumers.put(
			"feedbackDescription",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setFeedbackDescription);
		attributeGetterFunctions.put(
			"employeeBenefit", EVPServiceRequest::getEmployeeBenefit);
		attributeSetterBiConsumers.put(
			"employeeBenefit",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setEmployeeBenefit);
		attributeGetterFunctions.put(
			"recipientBenefit", EVPServiceRequest::getRecipientBenefit);
		attributeSetterBiConsumers.put(
			"recipientBenefit",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setRecipientBenefit);
		attributeGetterFunctions.put(
			"shareStory", EVPServiceRequest::getShareStory);
		attributeSetterBiConsumers.put(
			"shareStory",
			(BiConsumer<EVPServiceRequest, Boolean>)
				EVPServiceRequest::setShareStory);
		attributeGetterFunctions.put("status", EVPServiceRequest::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<EVPServiceRequest, Integer>)
				EVPServiceRequest::setStatus);
		attributeGetterFunctions.put(
			"statusByUserId", EVPServiceRequest::getStatusByUserId);
		attributeSetterBiConsumers.put(
			"statusByUserId",
			(BiConsumer<EVPServiceRequest, Long>)
				EVPServiceRequest::setStatusByUserId);
		attributeGetterFunctions.put(
			"statusByUserName", EVPServiceRequest::getStatusByUserName);
		attributeSetterBiConsumers.put(
			"statusByUserName",
			(BiConsumer<EVPServiceRequest, String>)
				EVPServiceRequest::setStatusByUserName);
		attributeGetterFunctions.put(
			"statusDate", EVPServiceRequest::getStatusDate);
		attributeSetterBiConsumers.put(
			"statusDate",
			(BiConsumer<EVPServiceRequest, Date>)
				EVPServiceRequest::setStatusDate);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@Override
	public long getEvpServiceRequestId() {
		return _evpServiceRequestId;
	}

	@Override
	public void setEvpServiceRequestId(long evpServiceRequestId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_evpServiceRequestId = evpServiceRequestId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_companyId = companyId;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public long getOriginalCompanyId() {
		return GetterUtil.getLong(
			this.<Long>getColumnOriginalValue("companyId"));
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userId = userId;
	}

	@Override
	public String getUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setUserUuid(String userUuid) {
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return "";
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_modifiedDate = modifiedDate;
	}

	@Override
	public long getContactEmailAddressId() {
		return _contactEmailAddressId;
	}

	@Override
	public void setContactEmailAddressId(long contactEmailAddressId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactEmailAddressId = contactEmailAddressId;
	}

	@Override
	public long getContactPhoneId() {
		return _contactPhoneId;
	}

	@Override
	public void setContactPhoneId(long contactPhoneId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactPhoneId = contactPhoneId;
	}

	@Override
	public long getContactUserId() {
		return _contactUserId;
	}

	@Override
	public void setContactUserId(long contactUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactUserId = contactUserId;
	}

	@Override
	public String getContactUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getContactUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setContactUserUuid(String contactUserUuid) {
	}

	@Override
	public long getEvpRequestOrganizationId() {
		return _evpRequestOrganizationId;
	}

	@Override
	public void setEvpRequestOrganizationId(long evpRequestOrganizationId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_evpRequestOrganizationId = evpRequestOrganizationId;
	}

	@Override
	public long getManagerUserId() {
		return _managerUserId;
	}

	@Override
	public void setManagerUserId(long managerUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_managerUserId = managerUserId;
	}

	@Override
	public String getManagerUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getManagerUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setManagerUserUuid(String managerUserUuid) {
	}

	@Override
	public long getParentEVPServiceRequestId() {
		return _parentEVPServiceRequestId;
	}

	@Override
	public void setParentEVPServiceRequestId(long parentEVPServiceRequestId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_parentEVPServiceRequestId = parentEVPServiceRequestId;
	}

	@Override
	public long getRequestOrganizationAddressId() {
		return _requestOrganizationAddressId;
	}

	@Override
	public void setRequestOrganizationAddressId(
		long requestOrganizationAddressId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestOrganizationAddressId = requestOrganizationAddressId;
	}

	@Override
	public long getRequestOrganizationWebsiteId() {
		return _requestOrganizationWebsiteId;
	}

	@Override
	public void setRequestOrganizationWebsiteId(
		long requestOrganizationWebsiteId) {

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestOrganizationWebsiteId = requestOrganizationWebsiteId;
	}

	@Override
	public long getSubsidiaryGroupId() {
		return _subsidiaryGroupId;
	}

	@Override
	public void setSubsidiaryGroupId(long subsidiaryGroupId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_subsidiaryGroupId = subsidiaryGroupId;
	}

	@Override
	public String getDescription() {
		if (_description == null) {
			return "";
		}
		else {
			return _description;
		}
	}

	@Override
	public void setDescription(String description) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_description = description;
	}

	@Override
	public int getEmploymentType() {
		return _employmentType;
	}

	@Override
	public void setEmploymentType(int employmentType) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_employmentType = employmentType;
	}

	@Override
	public int getEmploymentHoursPerWeek() {
		return _employmentHoursPerWeek;
	}

	@Override
	public void setEmploymentHoursPerWeek(int employmentHoursPerWeek) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_employmentHoursPerWeek = employmentHoursPerWeek;
	}

	@Override
	public String getPurpose() {
		if (_purpose == null) {
			return "";
		}
		else {
			return _purpose;
		}
	}

	@Override
	public void setPurpose(String purpose) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_purpose = purpose;
	}

	@Override
	public String getPurposeOther() {
		if (_purposeOther == null) {
			return "";
		}
		else {
			return _purposeOther;
		}
	}

	@Override
	public void setPurposeOther(String purposeOther) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_purposeOther = purposeOther;
	}

	@Override
	public String getBehalfOf() {
		if (_behalfOf == null) {
			return "";
		}
		else {
			return _behalfOf;
		}
	}

	@Override
	public void setBehalfOf(String behalfOf) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_behalfOf = behalfOf;
	}

	@Override
	public String getBehalfOfOther() {
		if (_behalfOfOther == null) {
			return "";
		}
		else {
			return _behalfOfOther;
		}
	}

	@Override
	public void setBehalfOfOther(String behalfOfOther) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_behalfOfOther = behalfOfOther;
	}

	@Override
	public Date getRequestedStartDate() {
		return _requestedStartDate;
	}

	@Override
	public void setRequestedStartDate(Date requestedStartDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestedStartDate = requestedStartDate;
	}

	@Override
	public Date getRequestedEndDate() {
		return _requestedEndDate;
	}

	@Override
	public void setRequestedEndDate(Date requestedEndDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestedEndDate = requestedEndDate;
	}

	@Override
	public int getRequestedTotalHours() {
		return _requestedTotalHours;
	}

	@Override
	public void setRequestedTotalHours(int requestedTotalHours) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_requestedTotalHours = requestedTotalHours;
	}

	@Override
	public boolean getPromoteTrip() {
		return _promoteTrip;
	}

	@Override
	public boolean isPromoteTrip() {
		return _promoteTrip;
	}

	@Override
	public void setPromoteTrip(boolean promoteTrip) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_promoteTrip = promoteTrip;
	}

	@Override
	public Date getConfirmedStartDate() {
		return _confirmedStartDate;
	}

	@Override
	public void setConfirmedStartDate(Date confirmedStartDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_confirmedStartDate = confirmedStartDate;
	}

	@Override
	public Date getConfirmedEndDate() {
		return _confirmedEndDate;
	}

	@Override
	public void setConfirmedEndDate(Date confirmedEndDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_confirmedEndDate = confirmedEndDate;
	}

	@Override
	public int getConfirmedTotalHours() {
		return _confirmedTotalHours;
	}

	@Override
	public void setConfirmedTotalHours(int confirmedTotalHours) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_confirmedTotalHours = confirmedTotalHours;
	}

	@Override
	public String getContactBenefit() {
		if (_contactBenefit == null) {
			return "";
		}
		else {
			return _contactBenefit;
		}
	}

	@Override
	public void setContactBenefit(String contactBenefit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactBenefit = contactBenefit;
	}

	@Override
	public String getContactComments() {
		if (_contactComments == null) {
			return "";
		}
		else {
			return _contactComments;
		}
	}

	@Override
	public void setContactComments(String contactComments) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_contactComments = contactComments;
	}

	@Override
	public String getHash() {
		if (_hash == null) {
			return "";
		}
		else {
			return _hash;
		}
	}

	@Override
	public void setHash(String hash) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_hash = hash;
	}

	@Override
	public String getFeedbackDescription() {
		if (_feedbackDescription == null) {
			return "";
		}
		else {
			return _feedbackDescription;
		}
	}

	@Override
	public void setFeedbackDescription(String feedbackDescription) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_feedbackDescription = feedbackDescription;
	}

	@Override
	public String getEmployeeBenefit() {
		if (_employeeBenefit == null) {
			return "";
		}
		else {
			return _employeeBenefit;
		}
	}

	@Override
	public void setEmployeeBenefit(String employeeBenefit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_employeeBenefit = employeeBenefit;
	}

	@Override
	public String getRecipientBenefit() {
		if (_recipientBenefit == null) {
			return "";
		}
		else {
			return _recipientBenefit;
		}
	}

	@Override
	public void setRecipientBenefit(String recipientBenefit) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_recipientBenefit = recipientBenefit;
	}

	@Override
	public boolean getShareStory() {
		return _shareStory;
	}

	@Override
	public boolean isShareStory() {
		return _shareStory;
	}

	@Override
	public void setShareStory(boolean shareStory) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_shareStory = shareStory;
	}

	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_status = status;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), replaced by {@link
	 *             #getColumnOriginalValue(String)}
	 */
	@Deprecated
	public int getOriginalStatus() {
		return GetterUtil.getInteger(
			this.<Integer>getColumnOriginalValue("status"));
	}

	@Override
	public long getStatusByUserId() {
		return _statusByUserId;
	}

	@Override
	public void setStatusByUserId(long statusByUserId) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserId = statusByUserId;
	}

	@Override
	public String getStatusByUserUuid() {
		try {
			User user = UserLocalServiceUtil.getUserById(getStatusByUserId());

			return user.getUuid();
		}
		catch (PortalException portalException) {
			return "";
		}
	}

	@Override
	public void setStatusByUserUuid(String statusByUserUuid) {
	}

	@Override
	public String getStatusByUserName() {
		if (_statusByUserName == null) {
			return "";
		}
		else {
			return _statusByUserName;
		}
	}

	@Override
	public void setStatusByUserName(String statusByUserName) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusByUserName = statusByUserName;
	}

	@Override
	public Date getStatusDate() {
		return _statusDate;
	}

	@Override
	public void setStatusDate(Date statusDate) {
		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		_statusDate = statusDate;
	}

	@Override
	public boolean isApproved() {
		if (getStatus() == WorkflowConstants.STATUS_APPROVED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDenied() {
		if (getStatus() == WorkflowConstants.STATUS_DENIED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isDraft() {
		if (getStatus() == WorkflowConstants.STATUS_DRAFT) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isExpired() {
		if (getStatus() == WorkflowConstants.STATUS_EXPIRED) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isInactive() {
		if (getStatus() == WorkflowConstants.STATUS_INACTIVE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isIncomplete() {
		if (getStatus() == WorkflowConstants.STATUS_INCOMPLETE) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isPending() {
		if (getStatus() == WorkflowConstants.STATUS_PENDING) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public boolean isScheduled() {
		if (getStatus() == WorkflowConstants.STATUS_SCHEDULED) {
			return true;
		}
		else {
			return false;
		}
	}

	public long getColumnBitmask() {
		if (_columnBitmask > 0) {
			return _columnBitmask;
		}

		if ((_columnOriginalValues == null) ||
			(_columnOriginalValues == Collections.EMPTY_MAP)) {

			return 0;
		}

		for (Map.Entry<String, Object> entry :
				_columnOriginalValues.entrySet()) {

			if (!Objects.equals(
					entry.getValue(), getColumnValue(entry.getKey()))) {

				_columnBitmask |= _columnBitmasks.get(entry.getKey());
			}
		}

		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), EVPServiceRequest.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EVPServiceRequest toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, EVPServiceRequest>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EVPServiceRequestImpl evpServiceRequestImpl =
			new EVPServiceRequestImpl();

		evpServiceRequestImpl.setEvpServiceRequestId(getEvpServiceRequestId());
		evpServiceRequestImpl.setCompanyId(getCompanyId());
		evpServiceRequestImpl.setUserId(getUserId());
		evpServiceRequestImpl.setUserName(getUserName());
		evpServiceRequestImpl.setCreateDate(getCreateDate());
		evpServiceRequestImpl.setModifiedDate(getModifiedDate());
		evpServiceRequestImpl.setContactEmailAddressId(
			getContactEmailAddressId());
		evpServiceRequestImpl.setContactPhoneId(getContactPhoneId());
		evpServiceRequestImpl.setContactUserId(getContactUserId());
		evpServiceRequestImpl.setEvpRequestOrganizationId(
			getEvpRequestOrganizationId());
		evpServiceRequestImpl.setManagerUserId(getManagerUserId());
		evpServiceRequestImpl.setParentEVPServiceRequestId(
			getParentEVPServiceRequestId());
		evpServiceRequestImpl.setRequestOrganizationAddressId(
			getRequestOrganizationAddressId());
		evpServiceRequestImpl.setRequestOrganizationWebsiteId(
			getRequestOrganizationWebsiteId());
		evpServiceRequestImpl.setSubsidiaryGroupId(getSubsidiaryGroupId());
		evpServiceRequestImpl.setDescription(getDescription());
		evpServiceRequestImpl.setEmploymentType(getEmploymentType());
		evpServiceRequestImpl.setEmploymentHoursPerWeek(
			getEmploymentHoursPerWeek());
		evpServiceRequestImpl.setPurpose(getPurpose());
		evpServiceRequestImpl.setPurposeOther(getPurposeOther());
		evpServiceRequestImpl.setBehalfOf(getBehalfOf());
		evpServiceRequestImpl.setBehalfOfOther(getBehalfOfOther());
		evpServiceRequestImpl.setRequestedStartDate(getRequestedStartDate());
		evpServiceRequestImpl.setRequestedEndDate(getRequestedEndDate());
		evpServiceRequestImpl.setRequestedTotalHours(getRequestedTotalHours());
		evpServiceRequestImpl.setPromoteTrip(isPromoteTrip());
		evpServiceRequestImpl.setConfirmedStartDate(getConfirmedStartDate());
		evpServiceRequestImpl.setConfirmedEndDate(getConfirmedEndDate());
		evpServiceRequestImpl.setConfirmedTotalHours(getConfirmedTotalHours());
		evpServiceRequestImpl.setContactBenefit(getContactBenefit());
		evpServiceRequestImpl.setContactComments(getContactComments());
		evpServiceRequestImpl.setHash(getHash());
		evpServiceRequestImpl.setFeedbackDescription(getFeedbackDescription());
		evpServiceRequestImpl.setEmployeeBenefit(getEmployeeBenefit());
		evpServiceRequestImpl.setRecipientBenefit(getRecipientBenefit());
		evpServiceRequestImpl.setShareStory(isShareStory());
		evpServiceRequestImpl.setStatus(getStatus());
		evpServiceRequestImpl.setStatusByUserId(getStatusByUserId());
		evpServiceRequestImpl.setStatusByUserName(getStatusByUserName());
		evpServiceRequestImpl.setStatusDate(getStatusDate());

		evpServiceRequestImpl.resetOriginalValues();

		return evpServiceRequestImpl;
	}

	@Override
	public int compareTo(EVPServiceRequest evpServiceRequest) {
		long primaryKey = evpServiceRequest.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object object) {
		if (this == object) {
			return true;
		}

		if (!(object instanceof EVPServiceRequest)) {
			return false;
		}

		EVPServiceRequest evpServiceRequest = (EVPServiceRequest)object;

		long primaryKey = evpServiceRequest.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isEntityCacheEnabled() {
		return true;
	}

	/**
	 * @deprecated As of Athanasius (7.3.x), with no direct replacement
	 */
	@Deprecated
	@Override
	public boolean isFinderCacheEnabled() {
		return true;
	}

	@Override
	public void resetOriginalValues() {
		_columnOriginalValues = Collections.emptyMap();

		_setModifiedDate = false;

		_columnBitmask = 0;
	}

	@Override
	public CacheModel<EVPServiceRequest> toCacheModel() {
		EVPServiceRequestCacheModel evpServiceRequestCacheModel =
			new EVPServiceRequestCacheModel();

		evpServiceRequestCacheModel.evpServiceRequestId =
			getEvpServiceRequestId();

		evpServiceRequestCacheModel.companyId = getCompanyId();

		evpServiceRequestCacheModel.userId = getUserId();

		evpServiceRequestCacheModel.userName = getUserName();

		String userName = evpServiceRequestCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			evpServiceRequestCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			evpServiceRequestCacheModel.createDate = createDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			evpServiceRequestCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		evpServiceRequestCacheModel.contactEmailAddressId =
			getContactEmailAddressId();

		evpServiceRequestCacheModel.contactPhoneId = getContactPhoneId();

		evpServiceRequestCacheModel.contactUserId = getContactUserId();

		evpServiceRequestCacheModel.evpRequestOrganizationId =
			getEvpRequestOrganizationId();

		evpServiceRequestCacheModel.managerUserId = getManagerUserId();

		evpServiceRequestCacheModel.parentEVPServiceRequestId =
			getParentEVPServiceRequestId();

		evpServiceRequestCacheModel.requestOrganizationAddressId =
			getRequestOrganizationAddressId();

		evpServiceRequestCacheModel.requestOrganizationWebsiteId =
			getRequestOrganizationWebsiteId();

		evpServiceRequestCacheModel.subsidiaryGroupId = getSubsidiaryGroupId();

		evpServiceRequestCacheModel.description = getDescription();

		String description = evpServiceRequestCacheModel.description;

		if ((description != null) && (description.length() == 0)) {
			evpServiceRequestCacheModel.description = null;
		}

		evpServiceRequestCacheModel.employmentType = getEmploymentType();

		evpServiceRequestCacheModel.employmentHoursPerWeek =
			getEmploymentHoursPerWeek();

		evpServiceRequestCacheModel.purpose = getPurpose();

		String purpose = evpServiceRequestCacheModel.purpose;

		if ((purpose != null) && (purpose.length() == 0)) {
			evpServiceRequestCacheModel.purpose = null;
		}

		evpServiceRequestCacheModel.purposeOther = getPurposeOther();

		String purposeOther = evpServiceRequestCacheModel.purposeOther;

		if ((purposeOther != null) && (purposeOther.length() == 0)) {
			evpServiceRequestCacheModel.purposeOther = null;
		}

		evpServiceRequestCacheModel.behalfOf = getBehalfOf();

		String behalfOf = evpServiceRequestCacheModel.behalfOf;

		if ((behalfOf != null) && (behalfOf.length() == 0)) {
			evpServiceRequestCacheModel.behalfOf = null;
		}

		evpServiceRequestCacheModel.behalfOfOther = getBehalfOfOther();

		String behalfOfOther = evpServiceRequestCacheModel.behalfOfOther;

		if ((behalfOfOther != null) && (behalfOfOther.length() == 0)) {
			evpServiceRequestCacheModel.behalfOfOther = null;
		}

		Date requestedStartDate = getRequestedStartDate();

		if (requestedStartDate != null) {
			evpServiceRequestCacheModel.requestedStartDate =
				requestedStartDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.requestedStartDate = Long.MIN_VALUE;
		}

		Date requestedEndDate = getRequestedEndDate();

		if (requestedEndDate != null) {
			evpServiceRequestCacheModel.requestedEndDate =
				requestedEndDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.requestedEndDate = Long.MIN_VALUE;
		}

		evpServiceRequestCacheModel.requestedTotalHours =
			getRequestedTotalHours();

		evpServiceRequestCacheModel.promoteTrip = isPromoteTrip();

		Date confirmedStartDate = getConfirmedStartDate();

		if (confirmedStartDate != null) {
			evpServiceRequestCacheModel.confirmedStartDate =
				confirmedStartDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.confirmedStartDate = Long.MIN_VALUE;
		}

		Date confirmedEndDate = getConfirmedEndDate();

		if (confirmedEndDate != null) {
			evpServiceRequestCacheModel.confirmedEndDate =
				confirmedEndDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.confirmedEndDate = Long.MIN_VALUE;
		}

		evpServiceRequestCacheModel.confirmedTotalHours =
			getConfirmedTotalHours();

		evpServiceRequestCacheModel.contactBenefit = getContactBenefit();

		String contactBenefit = evpServiceRequestCacheModel.contactBenefit;

		if ((contactBenefit != null) && (contactBenefit.length() == 0)) {
			evpServiceRequestCacheModel.contactBenefit = null;
		}

		evpServiceRequestCacheModel.contactComments = getContactComments();

		String contactComments = evpServiceRequestCacheModel.contactComments;

		if ((contactComments != null) && (contactComments.length() == 0)) {
			evpServiceRequestCacheModel.contactComments = null;
		}

		evpServiceRequestCacheModel.hash = getHash();

		String hash = evpServiceRequestCacheModel.hash;

		if ((hash != null) && (hash.length() == 0)) {
			evpServiceRequestCacheModel.hash = null;
		}

		evpServiceRequestCacheModel.feedbackDescription =
			getFeedbackDescription();

		String feedbackDescription =
			evpServiceRequestCacheModel.feedbackDescription;

		if ((feedbackDescription != null) &&
			(feedbackDescription.length() == 0)) {

			evpServiceRequestCacheModel.feedbackDescription = null;
		}

		evpServiceRequestCacheModel.employeeBenefit = getEmployeeBenefit();

		String employeeBenefit = evpServiceRequestCacheModel.employeeBenefit;

		if ((employeeBenefit != null) && (employeeBenefit.length() == 0)) {
			evpServiceRequestCacheModel.employeeBenefit = null;
		}

		evpServiceRequestCacheModel.recipientBenefit = getRecipientBenefit();

		String recipientBenefit = evpServiceRequestCacheModel.recipientBenefit;

		if ((recipientBenefit != null) && (recipientBenefit.length() == 0)) {
			evpServiceRequestCacheModel.recipientBenefit = null;
		}

		evpServiceRequestCacheModel.shareStory = isShareStory();

		evpServiceRequestCacheModel.status = getStatus();

		evpServiceRequestCacheModel.statusByUserId = getStatusByUserId();

		evpServiceRequestCacheModel.statusByUserName = getStatusByUserName();

		String statusByUserName = evpServiceRequestCacheModel.statusByUserName;

		if ((statusByUserName != null) && (statusByUserName.length() == 0)) {
			evpServiceRequestCacheModel.statusByUserName = null;
		}

		Date statusDate = getStatusDate();

		if (statusDate != null) {
			evpServiceRequestCacheModel.statusDate = statusDate.getTime();
		}
		else {
			evpServiceRequestCacheModel.statusDate = Long.MIN_VALUE;
		}

		return evpServiceRequestCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<EVPServiceRequest, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(4 * attributeGetterFunctions.size()) + 2);

		sb.append("{");

		for (Map.Entry<String, Function<EVPServiceRequest, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EVPServiceRequest, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((EVPServiceRequest)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<EVPServiceRequest, Object>>
			attributeGetterFunctions = getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			(5 * attributeGetterFunctions.size()) + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<EVPServiceRequest, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<EVPServiceRequest, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((EVPServiceRequest)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, EVPServiceRequest>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private long _evpServiceRequestId;
	private long _companyId;
	private long _userId;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private long _contactEmailAddressId;
	private long _contactPhoneId;
	private long _contactUserId;
	private long _evpRequestOrganizationId;
	private long _managerUserId;
	private long _parentEVPServiceRequestId;
	private long _requestOrganizationAddressId;
	private long _requestOrganizationWebsiteId;
	private long _subsidiaryGroupId;
	private String _description;
	private int _employmentType;
	private int _employmentHoursPerWeek;
	private String _purpose;
	private String _purposeOther;
	private String _behalfOf;
	private String _behalfOfOther;
	private Date _requestedStartDate;
	private Date _requestedEndDate;
	private int _requestedTotalHours;
	private boolean _promoteTrip;
	private Date _confirmedStartDate;
	private Date _confirmedEndDate;
	private int _confirmedTotalHours;
	private String _contactBenefit;
	private String _contactComments;
	private String _hash;
	private String _feedbackDescription;
	private String _employeeBenefit;
	private String _recipientBenefit;
	private boolean _shareStory;
	private int _status;
	private long _statusByUserId;
	private String _statusByUserName;
	private Date _statusDate;

	public <T> T getColumnValue(String columnName) {
		Function<EVPServiceRequest, Object> function =
			_attributeGetterFunctions.get(columnName);

		if (function == null) {
			throw new IllegalArgumentException(
				"No attribute getter function found for " + columnName);
		}

		return (T)function.apply((EVPServiceRequest)this);
	}

	public <T> T getColumnOriginalValue(String columnName) {
		if (_columnOriginalValues == null) {
			return null;
		}

		if (_columnOriginalValues == Collections.EMPTY_MAP) {
			_setColumnOriginalValues();
		}

		return (T)_columnOriginalValues.get(columnName);
	}

	private void _setColumnOriginalValues() {
		_columnOriginalValues = new HashMap<String, Object>();

		_columnOriginalValues.put("evpServiceRequestId", _evpServiceRequestId);
		_columnOriginalValues.put("companyId", _companyId);
		_columnOriginalValues.put("userId", _userId);
		_columnOriginalValues.put("userName", _userName);
		_columnOriginalValues.put("createDate", _createDate);
		_columnOriginalValues.put("modifiedDate", _modifiedDate);
		_columnOriginalValues.put(
			"contactEmailAddressId", _contactEmailAddressId);
		_columnOriginalValues.put("contactPhoneId", _contactPhoneId);
		_columnOriginalValues.put("contactUserId", _contactUserId);
		_columnOriginalValues.put(
			"evpRequestOrganizationId", _evpRequestOrganizationId);
		_columnOriginalValues.put("managerUserId", _managerUserId);
		_columnOriginalValues.put(
			"parentEVPServiceRequestId", _parentEVPServiceRequestId);
		_columnOriginalValues.put(
			"requestOrganizationAddressId", _requestOrganizationAddressId);
		_columnOriginalValues.put(
			"requestOrganizationWebsiteId", _requestOrganizationWebsiteId);
		_columnOriginalValues.put("subsidiaryGroupId", _subsidiaryGroupId);
		_columnOriginalValues.put("description", _description);
		_columnOriginalValues.put("employmentType", _employmentType);
		_columnOriginalValues.put(
			"employmentHoursPerWeek", _employmentHoursPerWeek);
		_columnOriginalValues.put("purpose", _purpose);
		_columnOriginalValues.put("purposeOther", _purposeOther);
		_columnOriginalValues.put("behalfOf", _behalfOf);
		_columnOriginalValues.put("behalfOfOther", _behalfOfOther);
		_columnOriginalValues.put("requestedStartDate", _requestedStartDate);
		_columnOriginalValues.put("requestedEndDate", _requestedEndDate);
		_columnOriginalValues.put("requestedTotalHours", _requestedTotalHours);
		_columnOriginalValues.put("promoteTrip", _promoteTrip);
		_columnOriginalValues.put("confirmedStartDate", _confirmedStartDate);
		_columnOriginalValues.put("confirmedEndDate", _confirmedEndDate);
		_columnOriginalValues.put("confirmedTotalHours", _confirmedTotalHours);
		_columnOriginalValues.put("contactBenefit", _contactBenefit);
		_columnOriginalValues.put("contactComments", _contactComments);
		_columnOriginalValues.put("hash", _hash);
		_columnOriginalValues.put("feedbackDescription", _feedbackDescription);
		_columnOriginalValues.put("employeeBenefit", _employeeBenefit);
		_columnOriginalValues.put("recipientBenefit", _recipientBenefit);
		_columnOriginalValues.put("shareStory", _shareStory);
		_columnOriginalValues.put("status", _status);
		_columnOriginalValues.put("statusByUserId", _statusByUserId);
		_columnOriginalValues.put("statusByUserName", _statusByUserName);
		_columnOriginalValues.put("statusDate", _statusDate);
	}

	private transient Map<String, Object> _columnOriginalValues;

	public static long getColumnBitmask(String columnName) {
		return _columnBitmasks.get(columnName);
	}

	private static final Map<String, Long> _columnBitmasks;

	static {
		Map<String, Long> columnBitmasks = new HashMap<>();

		columnBitmasks.put("evpServiceRequestId", 1L);

		columnBitmasks.put("companyId", 2L);

		columnBitmasks.put("userId", 4L);

		columnBitmasks.put("userName", 8L);

		columnBitmasks.put("createDate", 16L);

		columnBitmasks.put("modifiedDate", 32L);

		columnBitmasks.put("contactEmailAddressId", 64L);

		columnBitmasks.put("contactPhoneId", 128L);

		columnBitmasks.put("contactUserId", 256L);

		columnBitmasks.put("evpRequestOrganizationId", 512L);

		columnBitmasks.put("managerUserId", 1024L);

		columnBitmasks.put("parentEVPServiceRequestId", 2048L);

		columnBitmasks.put("requestOrganizationAddressId", 4096L);

		columnBitmasks.put("requestOrganizationWebsiteId", 8192L);

		columnBitmasks.put("subsidiaryGroupId", 16384L);

		columnBitmasks.put("description", 32768L);

		columnBitmasks.put("employmentType", 65536L);

		columnBitmasks.put("employmentHoursPerWeek", 131072L);

		columnBitmasks.put("purpose", 262144L);

		columnBitmasks.put("purposeOther", 524288L);

		columnBitmasks.put("behalfOf", 1048576L);

		columnBitmasks.put("behalfOfOther", 2097152L);

		columnBitmasks.put("requestedStartDate", 4194304L);

		columnBitmasks.put("requestedEndDate", 8388608L);

		columnBitmasks.put("requestedTotalHours", 16777216L);

		columnBitmasks.put("promoteTrip", 33554432L);

		columnBitmasks.put("confirmedStartDate", 67108864L);

		columnBitmasks.put("confirmedEndDate", 134217728L);

		columnBitmasks.put("confirmedTotalHours", 268435456L);

		columnBitmasks.put("contactBenefit", 536870912L);

		columnBitmasks.put("contactComments", 1073741824L);

		columnBitmasks.put("hash", 2147483648L);

		columnBitmasks.put("feedbackDescription", 4294967296L);

		columnBitmasks.put("employeeBenefit", 8589934592L);

		columnBitmasks.put("recipientBenefit", 17179869184L);

		columnBitmasks.put("shareStory", 34359738368L);

		columnBitmasks.put("status", 68719476736L);

		columnBitmasks.put("statusByUserId", 137438953472L);

		columnBitmasks.put("statusByUserName", 274877906944L);

		columnBitmasks.put("statusDate", 549755813888L);

		_columnBitmasks = Collections.unmodifiableMap(columnBitmasks);
	}

	private long _columnBitmask;
	private EVPServiceRequest _escapedModel;

}