/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.evp.model.impl;

import com.liferay.evp.model.EVPGrantTransaction;
import com.liferay.evp.model.EVPGrantTransactionModel;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the EVPGrantTransaction service. Represents a row in the &quot;EVPGrantTransaction&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link com.liferay.evp.model.EVPGrantTransactionModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link EVPGrantTransactionImpl}.
 * </p>
 *
 * @author Val Nagy
 * @see EVPGrantTransactionImpl
 * @see com.liferay.evp.model.EVPGrantTransaction
 * @see com.liferay.evp.model.EVPGrantTransactionModel
 * @generated
 */
public class EVPGrantTransactionModelImpl extends BaseModelImpl<EVPGrantTransaction>
	implements EVPGrantTransactionModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a e v p grant transaction model instance should use the {@link com.liferay.evp.model.EVPGrantTransaction} interface instead.
	 */
	public static final String TABLE_NAME = "EVPGrantTransaction";
	public static final Object[][] TABLE_COLUMNS = {
			{ "evpGrantTransactionId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "userName", Types.VARCHAR },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "evpGrantRequestId", Types.BIGINT },
			{ "fileEntryId", Types.BIGINT },
			{ "grantType", Types.INTEGER },
			{ "amount", Types.DOUBLE },
			{ "currencyCode", Types.VARCHAR },
			{ "date_", Types.TIMESTAMP },
			{ "note", Types.VARCHAR },
			{ "number_", Types.VARCHAR },
			{ "bankBICCode", Types.VARCHAR },
			{ "bankIBANCode", Types.VARCHAR },
			{ "bankName", Types.VARCHAR },
			{ "purposeOfUse", Types.VARCHAR }
		};
	public static final String TABLE_SQL_CREATE = "create table EVPGrantTransaction (evpGrantTransactionId LONG not null primary key,companyId LONG,userId LONG,userName VARCHAR(128) null,createDate DATE null,modifiedDate DATE null,evpGrantRequestId LONG,fileEntryId LONG,grantType INTEGER,amount DOUBLE,currencyCode VARCHAR(128) null,date_ DATE null,note VARCHAR(128) null,number_ VARCHAR(128) null,bankBICCode VARCHAR(128) null,bankIBANCode VARCHAR(128) null,bankName VARCHAR(128) null,purposeOfUse VARCHAR(128) null)";
	public static final String TABLE_SQL_DROP = "drop table EVPGrantTransaction";
	public static final String ORDER_BY_JPQL = " ORDER BY evpGrantTransaction.evpGrantTransactionId ASC";
	public static final String ORDER_BY_SQL = " ORDER BY EVPGrantTransaction.evpGrantTransactionId ASC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.com.liferay.evp.model.EVPGrantTransaction"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.com.liferay.evp.model.EVPGrantTransaction"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = false;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.com.liferay.evp.model.EVPGrantTransaction"));

	public EVPGrantTransactionModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _evpGrantTransactionId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setEvpGrantTransactionId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _evpGrantTransactionId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return EVPGrantTransaction.class;
	}

	@Override
	public String getModelClassName() {
		return EVPGrantTransaction.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("evpGrantTransactionId", getEvpGrantTransactionId());
		attributes.put("companyId", getCompanyId());
		attributes.put("userId", getUserId());
		attributes.put("userName", getUserName());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("evpGrantRequestId", getEvpGrantRequestId());
		attributes.put("fileEntryId", getFileEntryId());
		attributes.put("grantType", getGrantType());
		attributes.put("amount", getAmount());
		attributes.put("currencyCode", getCurrencyCode());
		attributes.put("date", getDate());
		attributes.put("note", getNote());
		attributes.put("number", getNumber());
		attributes.put("bankBICCode", getBankBICCode());
		attributes.put("bankIBANCode", getBankIBANCode());
		attributes.put("bankName", getBankName());
		attributes.put("purposeOfUse", getPurposeOfUse());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long evpGrantTransactionId = (Long)attributes.get(
				"evpGrantTransactionId");

		if (evpGrantTransactionId != null) {
			setEvpGrantTransactionId(evpGrantTransactionId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		String userName = (String)attributes.get("userName");

		if (userName != null) {
			setUserName(userName);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long evpGrantRequestId = (Long)attributes.get("evpGrantRequestId");

		if (evpGrantRequestId != null) {
			setEvpGrantRequestId(evpGrantRequestId);
		}

		Long fileEntryId = (Long)attributes.get("fileEntryId");

		if (fileEntryId != null) {
			setFileEntryId(fileEntryId);
		}

		Integer grantType = (Integer)attributes.get("grantType");

		if (grantType != null) {
			setGrantType(grantType);
		}

		Double amount = (Double)attributes.get("amount");

		if (amount != null) {
			setAmount(amount);
		}

		String currencyCode = (String)attributes.get("currencyCode");

		if (currencyCode != null) {
			setCurrencyCode(currencyCode);
		}

		Date date = (Date)attributes.get("date");

		if (date != null) {
			setDate(date);
		}

		String note = (String)attributes.get("note");

		if (note != null) {
			setNote(note);
		}

		String number = (String)attributes.get("number");

		if (number != null) {
			setNumber(number);
		}

		String bankBICCode = (String)attributes.get("bankBICCode");

		if (bankBICCode != null) {
			setBankBICCode(bankBICCode);
		}

		String bankIBANCode = (String)attributes.get("bankIBANCode");

		if (bankIBANCode != null) {
			setBankIBANCode(bankIBANCode);
		}

		String bankName = (String)attributes.get("bankName");

		if (bankName != null) {
			setBankName(bankName);
		}

		String purposeOfUse = (String)attributes.get("purposeOfUse");

		if (purposeOfUse != null) {
			setPurposeOfUse(purposeOfUse);
		}
	}

	@Override
	public long getEvpGrantTransactionId() {
		return _evpGrantTransactionId;
	}

	@Override
	public void setEvpGrantTransactionId(long evpGrantTransactionId) {
		_evpGrantTransactionId = evpGrantTransactionId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public String getUserName() {
		if (_userName == null) {
			return StringPool.BLANK;
		}
		else {
			return _userName;
		}
	}

	@Override
	public void setUserName(String userName) {
		_userName = userName;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getEvpGrantRequestId() {
		return _evpGrantRequestId;
	}

	@Override
	public void setEvpGrantRequestId(long evpGrantRequestId) {
		_evpGrantRequestId = evpGrantRequestId;
	}

	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@Override
	public int getGrantType() {
		return _grantType;
	}

	@Override
	public void setGrantType(int grantType) {
		_grantType = grantType;
	}

	@Override
	public double getAmount() {
		return _amount;
	}

	@Override
	public void setAmount(double amount) {
		_amount = amount;
	}

	@Override
	public String getCurrencyCode() {
		if (_currencyCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _currencyCode;
		}
	}

	@Override
	public void setCurrencyCode(String currencyCode) {
		_currencyCode = currencyCode;
	}

	@Override
	public Date getDate() {
		return _date;
	}

	@Override
	public void setDate(Date date) {
		_date = date;
	}

	@Override
	public String getNote() {
		if (_note == null) {
			return StringPool.BLANK;
		}
		else {
			return _note;
		}
	}

	@Override
	public void setNote(String note) {
		_note = note;
	}

	@Override
	public String getNumber() {
		if (_number == null) {
			return StringPool.BLANK;
		}
		else {
			return _number;
		}
	}

	@Override
	public void setNumber(String number) {
		_number = number;
	}

	@Override
	public String getBankBICCode() {
		if (_bankBICCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankBICCode;
		}
	}

	@Override
	public void setBankBICCode(String bankBICCode) {
		_bankBICCode = bankBICCode;
	}

	@Override
	public String getBankIBANCode() {
		if (_bankIBANCode == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankIBANCode;
		}
	}

	@Override
	public void setBankIBANCode(String bankIBANCode) {
		_bankIBANCode = bankIBANCode;
	}

	@Override
	public String getBankName() {
		if (_bankName == null) {
			return StringPool.BLANK;
		}
		else {
			return _bankName;
		}
	}

	@Override
	public void setBankName(String bankName) {
		_bankName = bankName;
	}

	@Override
	public String getPurposeOfUse() {
		if (_purposeOfUse == null) {
			return StringPool.BLANK;
		}
		else {
			return _purposeOfUse;
		}
	}

	@Override
	public void setPurposeOfUse(String purposeOfUse) {
		_purposeOfUse = purposeOfUse;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			EVPGrantTransaction.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public EVPGrantTransaction toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (EVPGrantTransaction)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		EVPGrantTransactionImpl evpGrantTransactionImpl = new EVPGrantTransactionImpl();

		evpGrantTransactionImpl.setEvpGrantTransactionId(getEvpGrantTransactionId());
		evpGrantTransactionImpl.setCompanyId(getCompanyId());
		evpGrantTransactionImpl.setUserId(getUserId());
		evpGrantTransactionImpl.setUserName(getUserName());
		evpGrantTransactionImpl.setCreateDate(getCreateDate());
		evpGrantTransactionImpl.setModifiedDate(getModifiedDate());
		evpGrantTransactionImpl.setEvpGrantRequestId(getEvpGrantRequestId());
		evpGrantTransactionImpl.setFileEntryId(getFileEntryId());
		evpGrantTransactionImpl.setGrantType(getGrantType());
		evpGrantTransactionImpl.setAmount(getAmount());
		evpGrantTransactionImpl.setCurrencyCode(getCurrencyCode());
		evpGrantTransactionImpl.setDate(getDate());
		evpGrantTransactionImpl.setNote(getNote());
		evpGrantTransactionImpl.setNumber(getNumber());
		evpGrantTransactionImpl.setBankBICCode(getBankBICCode());
		evpGrantTransactionImpl.setBankIBANCode(getBankIBANCode());
		evpGrantTransactionImpl.setBankName(getBankName());
		evpGrantTransactionImpl.setPurposeOfUse(getPurposeOfUse());

		evpGrantTransactionImpl.resetOriginalValues();

		return evpGrantTransactionImpl;
	}

	@Override
	public int compareTo(EVPGrantTransaction evpGrantTransaction) {
		long primaryKey = evpGrantTransaction.getPrimaryKey();

		if (getPrimaryKey() < primaryKey) {
			return -1;
		}
		else if (getPrimaryKey() > primaryKey) {
			return 1;
		}
		else {
			return 0;
		}
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof EVPGrantTransaction)) {
			return false;
		}

		EVPGrantTransaction evpGrantTransaction = (EVPGrantTransaction)obj;

		long primaryKey = evpGrantTransaction.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
	}

	@Override
	public CacheModel<EVPGrantTransaction> toCacheModel() {
		EVPGrantTransactionCacheModel evpGrantTransactionCacheModel = new EVPGrantTransactionCacheModel();

		evpGrantTransactionCacheModel.evpGrantTransactionId = getEvpGrantTransactionId();

		evpGrantTransactionCacheModel.companyId = getCompanyId();

		evpGrantTransactionCacheModel.userId = getUserId();

		evpGrantTransactionCacheModel.userName = getUserName();

		String userName = evpGrantTransactionCacheModel.userName;

		if ((userName != null) && (userName.length() == 0)) {
			evpGrantTransactionCacheModel.userName = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			evpGrantTransactionCacheModel.createDate = createDate.getTime();
		}
		else {
			evpGrantTransactionCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			evpGrantTransactionCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			evpGrantTransactionCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		evpGrantTransactionCacheModel.evpGrantRequestId = getEvpGrantRequestId();

		evpGrantTransactionCacheModel.fileEntryId = getFileEntryId();

		evpGrantTransactionCacheModel.grantType = getGrantType();

		evpGrantTransactionCacheModel.amount = getAmount();

		evpGrantTransactionCacheModel.currencyCode = getCurrencyCode();

		String currencyCode = evpGrantTransactionCacheModel.currencyCode;

		if ((currencyCode != null) && (currencyCode.length() == 0)) {
			evpGrantTransactionCacheModel.currencyCode = null;
		}

		Date date = getDate();

		if (date != null) {
			evpGrantTransactionCacheModel.date = date.getTime();
		}
		else {
			evpGrantTransactionCacheModel.date = Long.MIN_VALUE;
		}

		evpGrantTransactionCacheModel.note = getNote();

		String note = evpGrantTransactionCacheModel.note;

		if ((note != null) && (note.length() == 0)) {
			evpGrantTransactionCacheModel.note = null;
		}

		evpGrantTransactionCacheModel.number = getNumber();

		String number = evpGrantTransactionCacheModel.number;

		if ((number != null) && (number.length() == 0)) {
			evpGrantTransactionCacheModel.number = null;
		}

		evpGrantTransactionCacheModel.bankBICCode = getBankBICCode();

		String bankBICCode = evpGrantTransactionCacheModel.bankBICCode;

		if ((bankBICCode != null) && (bankBICCode.length() == 0)) {
			evpGrantTransactionCacheModel.bankBICCode = null;
		}

		evpGrantTransactionCacheModel.bankIBANCode = getBankIBANCode();

		String bankIBANCode = evpGrantTransactionCacheModel.bankIBANCode;

		if ((bankIBANCode != null) && (bankIBANCode.length() == 0)) {
			evpGrantTransactionCacheModel.bankIBANCode = null;
		}

		evpGrantTransactionCacheModel.bankName = getBankName();

		String bankName = evpGrantTransactionCacheModel.bankName;

		if ((bankName != null) && (bankName.length() == 0)) {
			evpGrantTransactionCacheModel.bankName = null;
		}

		evpGrantTransactionCacheModel.purposeOfUse = getPurposeOfUse();

		String purposeOfUse = evpGrantTransactionCacheModel.purposeOfUse;

		if ((purposeOfUse != null) && (purposeOfUse.length() == 0)) {
			evpGrantTransactionCacheModel.purposeOfUse = null;
		}

		return evpGrantTransactionCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(37);

		sb.append("{evpGrantTransactionId=");
		sb.append(getEvpGrantTransactionId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", userName=");
		sb.append(getUserName());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", evpGrantRequestId=");
		sb.append(getEvpGrantRequestId());
		sb.append(", fileEntryId=");
		sb.append(getFileEntryId());
		sb.append(", grantType=");
		sb.append(getGrantType());
		sb.append(", amount=");
		sb.append(getAmount());
		sb.append(", currencyCode=");
		sb.append(getCurrencyCode());
		sb.append(", date=");
		sb.append(getDate());
		sb.append(", note=");
		sb.append(getNote());
		sb.append(", number=");
		sb.append(getNumber());
		sb.append(", bankBICCode=");
		sb.append(getBankBICCode());
		sb.append(", bankIBANCode=");
		sb.append(getBankIBANCode());
		sb.append(", bankName=");
		sb.append(getBankName());
		sb.append(", purposeOfUse=");
		sb.append(getPurposeOfUse());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(58);

		sb.append("<model><model-name>");
		sb.append("com.liferay.evp.model.EVPGrantTransaction");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>evpGrantTransactionId</column-name><column-value><![CDATA[");
		sb.append(getEvpGrantTransactionId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userName</column-name><column-value><![CDATA[");
		sb.append(getUserName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>evpGrantRequestId</column-name><column-value><![CDATA[");
		sb.append(getEvpGrantRequestId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>fileEntryId</column-name><column-value><![CDATA[");
		sb.append(getFileEntryId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>grantType</column-name><column-value><![CDATA[");
		sb.append(getGrantType());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>amount</column-name><column-value><![CDATA[");
		sb.append(getAmount());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>currencyCode</column-name><column-value><![CDATA[");
		sb.append(getCurrencyCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>date</column-name><column-value><![CDATA[");
		sb.append(getDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>note</column-name><column-value><![CDATA[");
		sb.append(getNote());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>number</column-name><column-value><![CDATA[");
		sb.append(getNumber());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankBICCode</column-name><column-value><![CDATA[");
		sb.append(getBankBICCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankIBANCode</column-name><column-value><![CDATA[");
		sb.append(getBankIBANCode());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>bankName</column-name><column-value><![CDATA[");
		sb.append(getBankName());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>purposeOfUse</column-name><column-value><![CDATA[");
		sb.append(getPurposeOfUse());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = EVPGrantTransaction.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			EVPGrantTransaction.class
		};
	private long _evpGrantTransactionId;
	private long _companyId;
	private long _userId;
	private String _userUuid;
	private String _userName;
	private Date _createDate;
	private Date _modifiedDate;
	private long _evpGrantRequestId;
	private long _fileEntryId;
	private int _grantType;
	private double _amount;
	private String _currencyCode;
	private Date _date;
	private String _note;
	private String _number;
	private String _bankBICCode;
	private String _bankIBANCode;
	private String _bankName;
	private String _purposeOfUse;
	private EVPGrantTransaction _escapedModel;
}