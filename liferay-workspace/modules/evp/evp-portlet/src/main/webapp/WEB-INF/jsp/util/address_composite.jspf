<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%!
public static class AddressComposite {

	public AddressComposite(Address address) throws Exception {
		_address= address;
	}

	public long getAddressId() {
		return _address.getAddressId();
	}

	public String getCity() {
		return _address.getCity();
	}

	public Country getCountry() throws Exception {
		if (_country == null) {
			_country = CountryServiceUtil.getCountry(getCountryId());
		}

		return _country;
	}

	public long getCountryId() {
		return _address.getCountryId();
	}

	public long getEvpGrantRequestsCount() throws Exception {
		AlloyServiceInvoker evpGrantRequestAlloyServiceInvoker = new AlloyServiceInvoker(EVPGrantRequest.class.getName());

		return evpGrantRequestAlloyServiceInvoker.executeDynamicQueryCount(new Object[] {"requestOrganizationAddressId", getAddressId()});
	}

	public long getEvpServiceRequestsCount() throws Exception {
		AlloyServiceInvoker evpServiceRequestAlloyServiceInvoker = new AlloyServiceInvoker(EVPServiceRequest.class.getName());

		return evpServiceRequestAlloyServiceInvoker.executeDynamicQueryCount(new Object[] {"requestOrganizationAddressId", getAddressId()});
	}

	public boolean getPrimary() {
		return _address.getPrimary();
	}

	public String getStreet1() {
		return _address.getStreet1();
	}

	public String getZip() {
		return _address.getZip();
	}

	private Address _address;
	private Country _country;

}
%>