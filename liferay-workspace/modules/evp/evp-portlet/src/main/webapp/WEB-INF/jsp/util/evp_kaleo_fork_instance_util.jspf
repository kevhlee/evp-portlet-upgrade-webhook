<%--
/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */
--%>

<%!
public static class EVPKaleoForkInstanceUtil {

	public static List<EVPKaleoForkInstance> getEVPKaleoForkInstances(long classPK) throws Exception {
		AlloyServiceInvoker evpKaleoForkInstanceAlloyServiceInvoker = new AlloyServiceInvoker(EVPKaleoForkInstance.class.getName());

		return evpKaleoForkInstanceAlloyServiceInvoker.executeDynamicQuery(new Object[] {"classPK", classPK});
	}

	public static List<Integer> getStatuses(long classPK) throws Exception {
		List<Integer> statuses = new ArrayList<Integer>();

		List<EVPKaleoForkInstance> evpKaleoForkInstances = getEVPKaleoForkInstances(classPK);

		for (EVPKaleoForkInstance evpKaleoForkInstance : evpKaleoForkInstances) {
			statuses.add(evpKaleoForkInstance.getStatus());
		}

		return statuses;
	}

}
%>