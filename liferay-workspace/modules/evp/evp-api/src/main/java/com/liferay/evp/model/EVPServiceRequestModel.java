/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.evp.model;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.AuditedModel;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.model.WorkflowedModel;

import java.util.Date;

import org.osgi.annotation.versioning.ProviderType;

/**
 * The base model interface for the EVPServiceRequest service. Represents a row in the &quot;EVPServiceRequest&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation <code>com.liferay.evp.model.impl.EVPServiceRequestModelImpl</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in <code>com.liferay.evp.model.impl.EVPServiceRequestImpl</code>.
 * </p>
 *
 * @author Val Nagy
 * @see EVPServiceRequest
 * @generated
 */
@ProviderType
public interface EVPServiceRequestModel
	extends AuditedModel, BaseModel<EVPServiceRequest>, ShardedModel,
			WorkflowedModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a evp service request model instance should use the {@link EVPServiceRequest} interface instead.
	 */

	/**
	 * Returns the primary key of this evp service request.
	 *
	 * @return the primary key of this evp service request
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this evp service request.
	 *
	 * @param primaryKey the primary key of this evp service request
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the evp service request ID of this evp service request.
	 *
	 * @return the evp service request ID of this evp service request
	 */
	public long getEvpServiceRequestId();

	/**
	 * Sets the evp service request ID of this evp service request.
	 *
	 * @param evpServiceRequestId the evp service request ID of this evp service request
	 */
	public void setEvpServiceRequestId(long evpServiceRequestId);

	/**
	 * Returns the company ID of this evp service request.
	 *
	 * @return the company ID of this evp service request
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this evp service request.
	 *
	 * @param companyId the company ID of this evp service request
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this evp service request.
	 *
	 * @return the user ID of this evp service request
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this evp service request.
	 *
	 * @param userId the user ID of this evp service request
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this evp service request.
	 *
	 * @return the user uuid of this evp service request
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this evp service request.
	 *
	 * @param userUuid the user uuid of this evp service request
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this evp service request.
	 *
	 * @return the user name of this evp service request
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this evp service request.
	 *
	 * @param userName the user name of this evp service request
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this evp service request.
	 *
	 * @return the create date of this evp service request
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this evp service request.
	 *
	 * @param createDate the create date of this evp service request
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this evp service request.
	 *
	 * @return the modified date of this evp service request
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this evp service request.
	 *
	 * @param modifiedDate the modified date of this evp service request
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the contact email address ID of this evp service request.
	 *
	 * @return the contact email address ID of this evp service request
	 */
	public long getContactEmailAddressId();

	/**
	 * Sets the contact email address ID of this evp service request.
	 *
	 * @param contactEmailAddressId the contact email address ID of this evp service request
	 */
	public void setContactEmailAddressId(long contactEmailAddressId);

	/**
	 * Returns the contact phone ID of this evp service request.
	 *
	 * @return the contact phone ID of this evp service request
	 */
	public long getContactPhoneId();

	/**
	 * Sets the contact phone ID of this evp service request.
	 *
	 * @param contactPhoneId the contact phone ID of this evp service request
	 */
	public void setContactPhoneId(long contactPhoneId);

	/**
	 * Returns the contact user ID of this evp service request.
	 *
	 * @return the contact user ID of this evp service request
	 */
	public long getContactUserId();

	/**
	 * Sets the contact user ID of this evp service request.
	 *
	 * @param contactUserId the contact user ID of this evp service request
	 */
	public void setContactUserId(long contactUserId);

	/**
	 * Returns the contact user uuid of this evp service request.
	 *
	 * @return the contact user uuid of this evp service request
	 */
	public String getContactUserUuid();

	/**
	 * Sets the contact user uuid of this evp service request.
	 *
	 * @param contactUserUuid the contact user uuid of this evp service request
	 */
	public void setContactUserUuid(String contactUserUuid);

	/**
	 * Returns the evp request organization ID of this evp service request.
	 *
	 * @return the evp request organization ID of this evp service request
	 */
	public long getEvpRequestOrganizationId();

	/**
	 * Sets the evp request organization ID of this evp service request.
	 *
	 * @param evpRequestOrganizationId the evp request organization ID of this evp service request
	 */
	public void setEvpRequestOrganizationId(long evpRequestOrganizationId);

	/**
	 * Returns the manager user ID of this evp service request.
	 *
	 * @return the manager user ID of this evp service request
	 */
	public long getManagerUserId();

	/**
	 * Sets the manager user ID of this evp service request.
	 *
	 * @param managerUserId the manager user ID of this evp service request
	 */
	public void setManagerUserId(long managerUserId);

	/**
	 * Returns the manager user uuid of this evp service request.
	 *
	 * @return the manager user uuid of this evp service request
	 */
	public String getManagerUserUuid();

	/**
	 * Sets the manager user uuid of this evp service request.
	 *
	 * @param managerUserUuid the manager user uuid of this evp service request
	 */
	public void setManagerUserUuid(String managerUserUuid);

	/**
	 * Returns the parent evp service request ID of this evp service request.
	 *
	 * @return the parent evp service request ID of this evp service request
	 */
	public long getParentEVPServiceRequestId();

	/**
	 * Sets the parent evp service request ID of this evp service request.
	 *
	 * @param parentEVPServiceRequestId the parent evp service request ID of this evp service request
	 */
	public void setParentEVPServiceRequestId(long parentEVPServiceRequestId);

	/**
	 * Returns the request organization address ID of this evp service request.
	 *
	 * @return the request organization address ID of this evp service request
	 */
	public long getRequestOrganizationAddressId();

	/**
	 * Sets the request organization address ID of this evp service request.
	 *
	 * @param requestOrganizationAddressId the request organization address ID of this evp service request
	 */
	public void setRequestOrganizationAddressId(
		long requestOrganizationAddressId);

	/**
	 * Returns the request organization website ID of this evp service request.
	 *
	 * @return the request organization website ID of this evp service request
	 */
	public long getRequestOrganizationWebsiteId();

	/**
	 * Sets the request organization website ID of this evp service request.
	 *
	 * @param requestOrganizationWebsiteId the request organization website ID of this evp service request
	 */
	public void setRequestOrganizationWebsiteId(
		long requestOrganizationWebsiteId);

	/**
	 * Returns the subsidiary group ID of this evp service request.
	 *
	 * @return the subsidiary group ID of this evp service request
	 */
	public long getSubsidiaryGroupId();

	/**
	 * Sets the subsidiary group ID of this evp service request.
	 *
	 * @param subsidiaryGroupId the subsidiary group ID of this evp service request
	 */
	public void setSubsidiaryGroupId(long subsidiaryGroupId);

	/**
	 * Returns the description of this evp service request.
	 *
	 * @return the description of this evp service request
	 */
	@AutoEscape
	public String getDescription();

	/**
	 * Sets the description of this evp service request.
	 *
	 * @param description the description of this evp service request
	 */
	public void setDescription(String description);

	/**
	 * Returns the employment type of this evp service request.
	 *
	 * @return the employment type of this evp service request
	 */
	public int getEmploymentType();

	/**
	 * Sets the employment type of this evp service request.
	 *
	 * @param employmentType the employment type of this evp service request
	 */
	public void setEmploymentType(int employmentType);

	/**
	 * Returns the employment hours per week of this evp service request.
	 *
	 * @return the employment hours per week of this evp service request
	 */
	public int getEmploymentHoursPerWeek();

	/**
	 * Sets the employment hours per week of this evp service request.
	 *
	 * @param employmentHoursPerWeek the employment hours per week of this evp service request
	 */
	public void setEmploymentHoursPerWeek(int employmentHoursPerWeek);

	/**
	 * Returns the purpose of this evp service request.
	 *
	 * @return the purpose of this evp service request
	 */
	@AutoEscape
	public String getPurpose();

	/**
	 * Sets the purpose of this evp service request.
	 *
	 * @param purpose the purpose of this evp service request
	 */
	public void setPurpose(String purpose);

	/**
	 * Returns the purpose other of this evp service request.
	 *
	 * @return the purpose other of this evp service request
	 */
	@AutoEscape
	public String getPurposeOther();

	/**
	 * Sets the purpose other of this evp service request.
	 *
	 * @param purposeOther the purpose other of this evp service request
	 */
	public void setPurposeOther(String purposeOther);

	/**
	 * Returns the behalf of of this evp service request.
	 *
	 * @return the behalf of of this evp service request
	 */
	@AutoEscape
	public String getBehalfOf();

	/**
	 * Sets the behalf of of this evp service request.
	 *
	 * @param behalfOf the behalf of of this evp service request
	 */
	public void setBehalfOf(String behalfOf);

	/**
	 * Returns the behalf of other of this evp service request.
	 *
	 * @return the behalf of other of this evp service request
	 */
	@AutoEscape
	public String getBehalfOfOther();

	/**
	 * Sets the behalf of other of this evp service request.
	 *
	 * @param behalfOfOther the behalf of other of this evp service request
	 */
	public void setBehalfOfOther(String behalfOfOther);

	/**
	 * Returns the requested start date of this evp service request.
	 *
	 * @return the requested start date of this evp service request
	 */
	public Date getRequestedStartDate();

	/**
	 * Sets the requested start date of this evp service request.
	 *
	 * @param requestedStartDate the requested start date of this evp service request
	 */
	public void setRequestedStartDate(Date requestedStartDate);

	/**
	 * Returns the requested end date of this evp service request.
	 *
	 * @return the requested end date of this evp service request
	 */
	public Date getRequestedEndDate();

	/**
	 * Sets the requested end date of this evp service request.
	 *
	 * @param requestedEndDate the requested end date of this evp service request
	 */
	public void setRequestedEndDate(Date requestedEndDate);

	/**
	 * Returns the requested total hours of this evp service request.
	 *
	 * @return the requested total hours of this evp service request
	 */
	public int getRequestedTotalHours();

	/**
	 * Sets the requested total hours of this evp service request.
	 *
	 * @param requestedTotalHours the requested total hours of this evp service request
	 */
	public void setRequestedTotalHours(int requestedTotalHours);

	/**
	 * Returns the promote trip of this evp service request.
	 *
	 * @return the promote trip of this evp service request
	 */
	public boolean getPromoteTrip();

	/**
	 * Returns <code>true</code> if this evp service request is promote trip.
	 *
	 * @return <code>true</code> if this evp service request is promote trip; <code>false</code> otherwise
	 */
	public boolean isPromoteTrip();

	/**
	 * Sets whether this evp service request is promote trip.
	 *
	 * @param promoteTrip the promote trip of this evp service request
	 */
	public void setPromoteTrip(boolean promoteTrip);

	/**
	 * Returns the confirmed start date of this evp service request.
	 *
	 * @return the confirmed start date of this evp service request
	 */
	public Date getConfirmedStartDate();

	/**
	 * Sets the confirmed start date of this evp service request.
	 *
	 * @param confirmedStartDate the confirmed start date of this evp service request
	 */
	public void setConfirmedStartDate(Date confirmedStartDate);

	/**
	 * Returns the confirmed end date of this evp service request.
	 *
	 * @return the confirmed end date of this evp service request
	 */
	public Date getConfirmedEndDate();

	/**
	 * Sets the confirmed end date of this evp service request.
	 *
	 * @param confirmedEndDate the confirmed end date of this evp service request
	 */
	public void setConfirmedEndDate(Date confirmedEndDate);

	/**
	 * Returns the confirmed total hours of this evp service request.
	 *
	 * @return the confirmed total hours of this evp service request
	 */
	public int getConfirmedTotalHours();

	/**
	 * Sets the confirmed total hours of this evp service request.
	 *
	 * @param confirmedTotalHours the confirmed total hours of this evp service request
	 */
	public void setConfirmedTotalHours(int confirmedTotalHours);

	/**
	 * Returns the contact benefit of this evp service request.
	 *
	 * @return the contact benefit of this evp service request
	 */
	@AutoEscape
	public String getContactBenefit();

	/**
	 * Sets the contact benefit of this evp service request.
	 *
	 * @param contactBenefit the contact benefit of this evp service request
	 */
	public void setContactBenefit(String contactBenefit);

	/**
	 * Returns the contact comments of this evp service request.
	 *
	 * @return the contact comments of this evp service request
	 */
	@AutoEscape
	public String getContactComments();

	/**
	 * Sets the contact comments of this evp service request.
	 *
	 * @param contactComments the contact comments of this evp service request
	 */
	public void setContactComments(String contactComments);

	/**
	 * Returns the hash of this evp service request.
	 *
	 * @return the hash of this evp service request
	 */
	@AutoEscape
	public String getHash();

	/**
	 * Sets the hash of this evp service request.
	 *
	 * @param hash the hash of this evp service request
	 */
	public void setHash(String hash);

	/**
	 * Returns the feedback description of this evp service request.
	 *
	 * @return the feedback description of this evp service request
	 */
	@AutoEscape
	public String getFeedbackDescription();

	/**
	 * Sets the feedback description of this evp service request.
	 *
	 * @param feedbackDescription the feedback description of this evp service request
	 */
	public void setFeedbackDescription(String feedbackDescription);

	/**
	 * Returns the employee benefit of this evp service request.
	 *
	 * @return the employee benefit of this evp service request
	 */
	@AutoEscape
	public String getEmployeeBenefit();

	/**
	 * Sets the employee benefit of this evp service request.
	 *
	 * @param employeeBenefit the employee benefit of this evp service request
	 */
	public void setEmployeeBenefit(String employeeBenefit);

	/**
	 * Returns the recipient benefit of this evp service request.
	 *
	 * @return the recipient benefit of this evp service request
	 */
	@AutoEscape
	public String getRecipientBenefit();

	/**
	 * Sets the recipient benefit of this evp service request.
	 *
	 * @param recipientBenefit the recipient benefit of this evp service request
	 */
	public void setRecipientBenefit(String recipientBenefit);

	/**
	 * Returns the share story of this evp service request.
	 *
	 * @return the share story of this evp service request
	 */
	public boolean getShareStory();

	/**
	 * Returns <code>true</code> if this evp service request is share story.
	 *
	 * @return <code>true</code> if this evp service request is share story; <code>false</code> otherwise
	 */
	public boolean isShareStory();

	/**
	 * Sets whether this evp service request is share story.
	 *
	 * @param shareStory the share story of this evp service request
	 */
	public void setShareStory(boolean shareStory);

	/**
	 * Returns the status of this evp service request.
	 *
	 * @return the status of this evp service request
	 */
	@Override
	public int getStatus();

	/**
	 * Sets the status of this evp service request.
	 *
	 * @param status the status of this evp service request
	 */
	@Override
	public void setStatus(int status);

	/**
	 * Returns the status by user ID of this evp service request.
	 *
	 * @return the status by user ID of this evp service request
	 */
	@Override
	public long getStatusByUserId();

	/**
	 * Sets the status by user ID of this evp service request.
	 *
	 * @param statusByUserId the status by user ID of this evp service request
	 */
	@Override
	public void setStatusByUserId(long statusByUserId);

	/**
	 * Returns the status by user uuid of this evp service request.
	 *
	 * @return the status by user uuid of this evp service request
	 */
	@Override
	public String getStatusByUserUuid();

	/**
	 * Sets the status by user uuid of this evp service request.
	 *
	 * @param statusByUserUuid the status by user uuid of this evp service request
	 */
	@Override
	public void setStatusByUserUuid(String statusByUserUuid);

	/**
	 * Returns the status by user name of this evp service request.
	 *
	 * @return the status by user name of this evp service request
	 */
	@AutoEscape
	@Override
	public String getStatusByUserName();

	/**
	 * Sets the status by user name of this evp service request.
	 *
	 * @param statusByUserName the status by user name of this evp service request
	 */
	@Override
	public void setStatusByUserName(String statusByUserName);

	/**
	 * Returns the status date of this evp service request.
	 *
	 * @return the status date of this evp service request
	 */
	@Override
	public Date getStatusDate();

	/**
	 * Sets the status date of this evp service request.
	 *
	 * @param statusDate the status date of this evp service request
	 */
	@Override
	public void setStatusDate(Date statusDate);

	/**
	 * Returns <code>true</code> if this evp service request is approved.
	 *
	 * @return <code>true</code> if this evp service request is approved; <code>false</code> otherwise
	 */
	@Override
	public boolean isApproved();

	/**
	 * Returns <code>true</code> if this evp service request is denied.
	 *
	 * @return <code>true</code> if this evp service request is denied; <code>false</code> otherwise
	 */
	@Override
	public boolean isDenied();

	/**
	 * Returns <code>true</code> if this evp service request is a draft.
	 *
	 * @return <code>true</code> if this evp service request is a draft; <code>false</code> otherwise
	 */
	@Override
	public boolean isDraft();

	/**
	 * Returns <code>true</code> if this evp service request is expired.
	 *
	 * @return <code>true</code> if this evp service request is expired; <code>false</code> otherwise
	 */
	@Override
	public boolean isExpired();

	/**
	 * Returns <code>true</code> if this evp service request is inactive.
	 *
	 * @return <code>true</code> if this evp service request is inactive; <code>false</code> otherwise
	 */
	@Override
	public boolean isInactive();

	/**
	 * Returns <code>true</code> if this evp service request is incomplete.
	 *
	 * @return <code>true</code> if this evp service request is incomplete; <code>false</code> otherwise
	 */
	@Override
	public boolean isIncomplete();

	/**
	 * Returns <code>true</code> if this evp service request is pending.
	 *
	 * @return <code>true</code> if this evp service request is pending; <code>false</code> otherwise
	 */
	@Override
	public boolean isPending();

	/**
	 * Returns <code>true</code> if this evp service request is scheduled.
	 *
	 * @return <code>true</code> if this evp service request is scheduled; <code>false</code> otherwise
	 */
	@Override
	public boolean isScheduled();

}